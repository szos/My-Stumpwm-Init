This is the stub README.txt for the "simkey" project.

* SIMKEY module
  This module provides a method of simulating keys for applications
  that dont allow rebinding. There is a function that you will need 
  to put somewhere in your init file (it needs to be in the stumpwm
  package), at least until I submit a pull request or find another 
  method. Look to the bottom of the document for the function 
  definition. 

** Use
   This module exports several functions, define-top-map-key, trans-keys-hangar, and
   the main act, define-key-translation. heres how to set it up:

   (add-hook *focus-window-hook* 'simkey:trans-keys-hangar)
   (define-top-map-key prefix-key *root-map*) 
   (define-key-translation "Class" 
     ((kbd "binding") "command")
     ...)

   Occasionally simkey will cause stumpwm to get confused about the top map. I think this
   is due to switching windows to fast, and causing a buildup of focus-window-hook calls
   This can be fixed be resetting/restarting Stumpwm. 
   
   additionally simkey will get confused if things are redefined too many times. for this
   reason I suggest storing all simkey defenitions and bindings in a seperate file. then
   connect via slime and set *top-binds* to nil (i plan to implement a reset command). 
   Then navigate to your simkey file, and in slime do C-c C-k to compile the whole buffer.
    
*** DEFINE-TOP-MAP-KEY  --  Handling Top Map Keys
    Because of how this module handles
    translation maps (through define-interactive-keymap), any top map bindings
    will need to be added to every single translation map. Theres a macro to help
    with this called 'simkey:define-top-map-key' wich takes a key and a command
    and both binds them to the top map AND adds them to every single translation 
    map. So one would replace any definitions that look like 
    '(define-key *top-map* ...)' with '(simkey:define-top-map-key ...)'

*** DEFINE-KEY-TRANSLATION  --  Rebind the Unbindable
    This macro is used to rebind everything, similar to simulation keys in EXWM.
    this is used similarly to define-interactive-keymap, but instead of passing 
    a command name, before/after/abort, and the keymap, we pass in the name of 
    the class we want this applied to, and the keybindings. Any keys defined via
    define-top-map-key will be bound for all translations. 

*** TRANS-KEYS-HANGAR  --  the Brains of the Outfit
    This function needs to be hung on the *focus-window-hook*. It tracks what 
    translations are defined and binds/unbinds them when appropriate. 
